// <auto-generated />
using System;
using RealStateApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace RealStateApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240710141846_Initial Migration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Application.Models.Address", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AddressID"));

                    b.Property<string>("AddressLine")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("State")
                        .HasColumnType("longtext");

                    b.Property<int?>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("AddressID");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Application.Models.Employee", b =>
                {
                    b.Property<int>("EmpID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EmpID"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("DateOfBirth");

                    b.Property<string>("EmpFirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("EmpLastName")
                        .HasColumnType("longtext");

                    b.Property<int?>("SalesOfficeID")
                        .HasColumnType("int");

                    b.HasKey("EmpID");

                    b.HasIndex("SalesOfficeID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Application.Models.Owner", b =>
                {
                    b.Property<int>("OwnerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OwnerID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("OwnerFirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OwnerLastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("OwnerID");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("Application.Models.PropOwnerTable", b =>
                {
                    b.Property<int>("OwnerID")
                        .HasColumnType("int");

                    b.Property<int>("PropertyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("PercentOwned")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("OwnerID", "PropertyID");

                    b.HasIndex("PropertyID");

                    b.ToTable("PropOwnerTables");
                });

            modelBuilder.Entity("Application.Models.Property", b =>
                {
                    b.Property<int>("PropertyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PropertyID"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ListPrice")
                        .HasColumnType("int");

                    b.Property<int>("NoOfBathrooms")
                        .HasColumnType("int");

                    b.Property<int>("NoOfBedrooms")
                        .HasColumnType("int");

                    b.Property<int>("SalesOfficeID")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("PropertyID");

                    b.HasIndex("SalesOfficeID");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("Application.Models.SalesOffice", b =>
                {
                    b.Property<int>("OfficeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OfficeID"));

                    b.Property<int?>("AddressID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ManagedByEmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("OfficeName")
                        .HasColumnType("longtext");

                    b.HasKey("OfficeID");

                    b.HasIndex("AddressID");

                    b.HasIndex("ManagedByEmployeeID")
                        .IsUnique();

                    b.ToTable("SalesOffices");
                });

            modelBuilder.Entity("Application.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Application.Models.Employee", b =>
                {
                    b.HasOne("Application.Models.SalesOffice", null)
                        .WithMany()
                        .HasForeignKey("SalesOfficeID");
                });

            modelBuilder.Entity("Application.Models.PropOwnerTable", b =>
                {
                    b.HasOne("Application.Models.Owner", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Application.Models.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Application.Models.Property", b =>
                {
                    b.HasOne("Application.Models.SalesOffice", "SalesOffice")
                        .WithMany()
                        .HasForeignKey("SalesOfficeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalesOffice");
                });

            modelBuilder.Entity("Application.Models.SalesOffice", b =>
                {
                    b.HasOne("Application.Models.Address", null)
                        .WithMany()
                        .HasForeignKey("AddressID");

                    b.HasOne("Application.Models.Employee", null)
                        .WithOne()
                        .HasForeignKey("Application.Models.SalesOffice", "ManagedByEmployeeID");
                });
#pragma warning restore 612, 618
        }
    }
}
